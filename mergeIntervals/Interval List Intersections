https://leetcode.com/problems/interval-list-intersections/

class Solution {
    public int[][] intervalIntersection(int[][] A, int[][] B) {
        
        if(A == null || A.length == 0 || B == null || B.length == 0)
            return new int[0][0];
        
        int i=0,j=0;
        List<int[]> res = new ArrayList<>();
        while(i < A.length && j < B.length)
        {      
            //criss-cross
            if(A[i][0] <= B[j][1] && B[j][0] <= A[i][1])
                res.add(new int[]{Math.max(A[i][0],B[j][0]),Math.min(A[i][1],B[j][1])});
            if(A[i][1] < B[j][1])
                i++;
            else
                j++;
         }
        return res.toArray(new int[res.size()][2]);       
    }
}

Time: O(M+N)
Space: O(Min(M+N))
