https://leetcode.com/problems/validate-binary-search-tree/

Solution1:
class Solution {
    
    public boolean isValidBST(TreeNode root,Integer min,Integer max)
    {
        if(root == null)
            return true;
        
        if(min != null && root.val <= min)
            return false;
        
        if(max != null && root.val >= max)
            return false;
        
        return isValidBST(root.left,min,root.val) && isValidBST(root.right,root.val,max);
    }
    public boolean isValidBST(TreeNode root) {
        
        if(root == null)
            return true;
       return isValidBST(root,null,null);
        
    }
}

Solution2:
class Solution {
    Integer prev = null;
    public boolean isValidBST(TreeNode root) {
       if(root == null)
            return true;
       if(!isValidBST(root.left))
           return false;
        if(prev != null && root.val <= prev)
            return false;
        prev = root.val;
       return isValidBST(root.right);
    
    }
}
