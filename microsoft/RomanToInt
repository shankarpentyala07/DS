https://leetcode.com/explore/interview/card/microsoft/48/others/198/

Approach 1: (Right to Left)
class Solution {
    public int romanToInt(String s) {
        
        HashMap<Character,Integer> hm = new HashMap<>();
        hm.put('I',1);
        hm.put('V',5);
        hm.put('X',10);
        hm.put('L',50);
        hm.put('C',100);
        hm.put('D',500);
        hm.put('M',1000);
        int len = s.length()-1;
        int prev = 0;
        int result=0;
        while(len >= 0)
        {
            int curr = hm.get(s.charAt(len));
          if(prev <= curr) 
              result += curr;
           else
             result -= curr;
            prev = curr;
            len--;
        }
        return result;
    }
}

Approach 2: Left to right:
class Solution {
    public int romanToInt(String s) {
        
    
        
        HashMap<Character,Integer> hm = new HashMap<>();
        hm.put('I',1);
        hm.put('V',5);
        hm.put('X',10);
        hm.put('L',50);
        hm.put('C',100);
        hm.put('D',500);
        hm.put('M',1000);
        int len = s.length()-1;
        int prev = hm.get(s.charAt(0));
        int result=prev;
        int i=1;
        while(i<=len)
        {
            int curr = hm.get(s.charAt(i));
          if(prev >= curr) 
              result += curr;
           else
             result += (curr-2*prev);
            prev = curr;
            i++;
        }
        return result;
    }
}

we subtract 2*prev value since it is counted already before reaching current.

Example: CCCXLVIII
Concept:

Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
Symbol       Value
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
