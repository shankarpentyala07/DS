https://leetcode.com/problems/reverse-linked-list/
Recursive Approach:
class Solution {
    public ListNode reverseList(ListNode head) {
        
        if(head == null || head.next == null)
            return head;
        ListNode result = reverseList(head.next);
        head.next.next = head;
        head.next = null;
       return result;
        
        
    }
}

Iterative Approach:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null)
            return head;
        //Iterative Soln
        ListNode prev=null,curr = head;
        while(curr != null)
        {
            ListNode tmp = curr.next;
            curr.next = prev;
            prev =curr;
            curr = tmp;
        }
        return prev;
        
    }
}
