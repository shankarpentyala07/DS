https://leetcode.com/explore/interview/card/microsoft/32/linked-list/212/

Solution1:
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        int len1 = 0,len2=0;
        
        ListNode currA = headA,currB = headB;
        while(currA != null)
        {
            len1++;
            currA = currA.next;
        }
        
         while(currB != null)
        {
            len2++;
            currB = currB.next;
        }
        
        while(len1 > 0 && len2 > 0)
        {
            if(headA == headB)
                return headA;
            
            if(len1 >= len2)
            {
                headA = headA.next;
                len1--;
            }
            
            if(len2 > len1)
            {
                headB = headB.next;
                len2--;
            }
            
            
                
        }
        
        return null;
    }
}

Solution2:
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        
        ListNode currA = headA,currB=headB;
        while(currA != currB)
        {
        currA = currA == null?headB:currA.next;
        currB = currB == null?headA:currB.next;
        }
        
        return currA;
    }
}
