
https://seattler.io/thread-1570.htm


Solution1:

 public int maxChunksToSorted(int[] arr) {
        
        int max=-1,chunk=0;
        for(int i=0;i<arr.length;i++)
        {
            max =Math.max(max,arr[i]);
            
            if(max == i)
                chunk++;
        }
        
        return chunk;
    }

Time Complexity: O(n)
Space Complexity: O(1)

Solution2:
 int chunks=0;
    int A[] = new int[arr.length];
    
    for(int i=0;i<arr.length;i++){
        A[i]=arr[i];
    }
    
    int origSum = 0, sortedSum=0;
    Arrays.sort(A);
    for(int i=0;i<arr.length;i++){
        origSum +=arr[i];
        sortedSum+=A[i];
        
        if(origSum == sortedSum){
            chunks++;
        }
    }
    return chunks;
}
