Given a string S having lowercase English letters, returns a string with no instances of three identical consecutive letters, obtained from S by deleting 
the minimum possible number of letters.

Example 1:
Input: eedaaad
Output: eedaad
Explanation:
One occurrence of letter a is deleted.

Example 2:
Input: xxxtxxx
Output: xxtxx
Explanation:
Note that letter x can occur more than three times in the returned string if the occurrences are not consecutive.

Example 3:
Input: uuuuxaaaaxum
Output: uuxaaxum
 
Solution1:
Time: O(n)
Space: O(1)
public static String filterString(String s) {
        // WRITE YOUR BRILLIANT CODE HERE
        StringBuilder sb = new StringBuilder();
        if(s== null || s.length() < 2)
            return s;
       
        sb.append(s.charAt(0));
        int count=1,len = s.length();
        for(int i=1;i<len;i++)
        {
            if(s.charAt(i) == s.charAt(i-1))
               count++;
            else
               count = 1;
               
               if(count <=2)
                   sb.append(s.charAt(i));
        }
                             
          return sb.toString();
    }


Solution2: (Same as 1)

  public static String filterString(String s) {
        // WRITE YOUR BRILLIANT CODE HERE
        int s_len = s.length();
        StringBuilder sb = new StringBuilder();
        sb.append(s.charAt(0));
        sb.append(s.charAt(1));
        for (int i = 2; i < s_len; ++i) {
            if (s.charAt(i) != s.charAt(i - 1) || s.charAt(i) != s.charAt(i - 2)) {
                sb.append(s.charAt(i));
            }
        }
        return sb.toString();
    }
