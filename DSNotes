Divide and Conquer & Backtracking Deck: https://leetcode.com/explore/learn/card/recursion-ii/472/backtracking/2793/

******
Interview Questions: https://leetcode.com/discuss/interview-question/?currentPage=1&orderBy=hot&query=

Khan Academy : https://www.khanacademy.org/computing/computer-science/algorithms#graph-representation

Learning:
1. Have your ever wondered,how the left and right values are to be in a binary search.
ex: Array is nums1
left = 0, right = nums1.length-1 or right =nums1.length
Here the values of left and right are the possible values.
In a binary search,the possible values are 0 <-> nums1.length-1
In a median of two sorted Arrays,the possible values are 0 <-> num1.length as for an array of size n ,there are n+1 possible partitions

Interesing Problems:

Sort Colors(Dutch National Flag Problem)
https://leetcode.com/problems/sort-colors/

Similar Setof Problems:
https://leetcode.com/problems/letter-combinations-of-a-phone-number/
https://leetcode.com/problems/generate-parentheses/
Template:


     public void letterCombinations(char[] ch,HashMap<Character,char[]> map,StringBuilder sb,List<String> res,int pos)
    {
     
        if(sb.length() == ch.length)
            res.add(sb.toString());
        else
        {
            for(char digit : map.get(ch[pos]))
            {
                sb.append(digit);
                letterCombinations(ch,map,sb,res,pos+1);
                sb.setLength(sb.length()-1);
            }
        }
    }
public void generateParenthesis(StringBuilder sb,int pos,int open,int close,List<String> res,int n)
    {
        if(pos == 2*n)
                res.add(sb.toString());
        else
        {
            if(open < n)
            {
            sb.append('(');
            generateParenthesis(sb,pos+1,open+1,close,res,n);
            sb.setLength(sb.length()-1);
                
            }
            if(close < open)
            {
            sb.append(')');
            generateParenthesis(sb,pos+1,open,close+1,res,n); 
            sb.setLength(sb.length()-1);
            }
        }
        
    }

https://shahriar.svbtle.com/Understanding-writethrough-writearound-and-writeback-caching-with-python
http://highscalability.squarespace.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html
https://leetcode.com/problems/sliding-window-maximum/

Linkedist Tip:

If two lists have different length and you want to traverse the list wiith larger length and once equal length,traverse both lists
while(len1 > 0 && len2 > 0)
        {
            if(headA == headB)
                return headA;
            
            if(len1 >= len2)
            {
                headA = headA.next;
                len1--;
            }
            
            if(len2 > len1)
            {
                headB = headB.next;
                len2--;
            }

}
