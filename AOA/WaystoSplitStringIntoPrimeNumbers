https://leetcode.com/discuss/interview-question/593211/count-the-number-of-ways-the-string-can-split-to-get-pime-number
public int findNumberOfWays(String input) {
	List<List<Integer>> ways = new ArrayList<>();
	List<Integer> results = new ArrayList<Integer>();
	findPermutations(input, results, ways);
	return ways.size();
}

public void findPermutations(String suffix,
		List<Integer> results, List<List<Integer>> resultSet) {
	
	if (suffix.length() == 0) {
		resultSet.add(new ArrayList<Integer>(results));
		System.out.println(results.toString());
		return;
	}

	for (int i = 0; i < suffix.length(); ++i) {
		String snumber = suffix.substring(0, i + 1);

		int numb = Integer.parseInt(snumber);
		boolean isPrime = isPrimeNumber(numb);
		if(isPrime){
			results.add(numb);
			findPermutations(suffix.substring(i + 1),	results, resultSet);
			results.remove(results.size()-1);
		}
	}

