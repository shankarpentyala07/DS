https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters/

Soution: (Sliding Window + HashMap)
class Solution {
    public int lengthOfLongestSubstringKDistinct(String str, int k) {
    
         char[] strA = str.toCharArray();
    //Set<Character> unique = new HashSet<Character>();
    HashMap<Character,Integer> hm = new HashMap<>();
    // TODO: Write your code here
    int wStart=0,maxlen=0;
    for(int wEnd=0;wEnd<strA.length;wEnd++)
    {
      hm.put(strA[wEnd],hm.getOrDefault(strA[wEnd],0)+1);
      if(hm.size() <= k)
        maxlen = Math.max(maxlen,wEnd-wStart+1);
      else
      {
      while(hm.size() > k)
        {
          int value = hm.get(strA[wStart]);
          if(value == 1)
            hm.remove(strA[wStart]);
          else
            hm.put(strA[wStart],value-1);
          wStart++;
        }
        
      }
    }
    return maxlen;        
    }
}

Time : O(N)
Space: O(K+1)
