Given an array of positive numbers and a positive number ‘S,’ 
find the length of the smallest contiguous subarray whose sum is greater than or equal to ‘S’. Return 0 if no such subarray exists.

Input: [2, 1, 5, 2, 3, 2], S=7 
Output: 2
Explanation: The smallest subarray with a sum great than or equal to '7' is [5, 2].

class MinSizeSubArraySum {
  public static int findMinSubArray(int S, int[] arr) {
    // TODO: Write your code here
    int wStart = 0,sum=0,minlen=arr.length;
    for (int wEnd = 0;wEnd<arr.length;wEnd++)
    {
      sum += arr[wEnd];
      while(sum >= S)
      {
        minlen = Math.min(wEnd-wStart+1,minlen);
        sum -= arr[wStart++];
      }
    }
    return minlen;
  }
}
